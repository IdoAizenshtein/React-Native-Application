import React, { Fragment } from 'react'import { withTranslation } from 'react-i18next'import AnimatedControlledRow from '../../../../components/DataRow/AnimatedControlledRow'import { Animated, Easing, Image, Text, TouchableOpacity, View } from 'react-native'import styles from '../UploadingDocumentsStyles'import { sp } from '../../../../utils/func'import { fonts } from '../../../../styles/vars'import CustomIcon from '../../../../components/Icons/Fontello'@withTranslation()export default class RowCompany extends AnimatedControlledRow {  constructor (props) {    super(props)    this.initialHeight = 53.5    this.maxHeight = this.initialHeight    this.state = this.initialState  }  get initialState () {    return {      ...super.initialState,      isOpen: this.props.isOpen,    }  }  setMaxHeightAll = (e) => {    this.setMaxHeight(e)    const { isOpen } = this.props    if (isOpen) {      setTimeout(() => {        const { height } = this.state        height.setValue(this.maxHeight + this.minHeight)        Animated.timing(height, {          toValue: this.maxHeight + this.minHeight,          duration: 200,          easing: Easing.ease,          useNativeDriver: false,        }).start()      }, 20)    } else {      setTimeout(() => {        const { height } = this.state        const initialValue = height.__getValue()        height.setValue(initialValue)        Animated.timing(height, {          toValue: this.minHeight,          duration: 200,          easing: Easing.ease,          useNativeDriver: false,        }).start()      }, 20)    }  }  get renderScrollItem () {    const { item, openCameraAndCameraRoll, oneRow, getFolders } = this.props    return (      <View style={{        height: oneRow ? 'auto' : 94,        overflow: 'hidden',        paddingTop: oneRow ? 15 : 0,      }}>        <View style={{          flexDirection: 'row-reverse',          alignItems: 'flex-end',          justifyContent: 'flex-end',        }}>          {!oneRow && (            <View style={{              flex: 26.5,            }} />          )}          <View style={{            flex: 319.5,            flexDirection: 'row',            alignItems: 'flex-end',            justifyContent: oneRow ? 'center' : 'flex-end',          }}>            <Text style={{              paddingHorizontal: 6,              fontSize: oneRow ? sp(20) : sp(15.5),              color: '#022258',              fontFamily: fonts.regular,            }}>              מה ברצונך לדווח -            </Text>          </View>        </View>        <View style={{          flexDirection: 'row-reverse',          height: oneRow ? 'auto' : 80,          paddingTop: oneRow ? 45 : 0,        }}>          {!oneRow && (            <View style={{              flex: 26.5,            }} />          )}          <View style={{            flex: 293,            flexDirection: 'row-reverse',            justifyContent: 'space-around',            alignContent: 'center',          }}>            <TouchableOpacity              style={{                alignItems: 'center',                alignContent: 'center',                justifyContent: 'center',                alignSelf: 'center',                flexDirection: 'column',              }}              onPress={openCameraAndCameraRoll(item, true)}>              <View style={{                width: oneRow ? 60 : 36,                height: oneRow ? 60 : 36,                alignItems: 'center',                alignContent: 'center',                justifyContent: 'center',                alignSelf: 'center',                flexDirection: 'column',                borderRadius: oneRow ? 30 : 18,                backgroundColor: '#cd1010',              }}>                <CustomIcon                  style={{                    marginRight: oneRow ? -8 : -5,                  }}                  name={'expense-press'}                  size={oneRow ? 34 : 22}                  color={'#ffffff'} />              </View>              <Text style={{                fontSize: sp(oneRow ? 18 : 15),                color: '#022258',                fontFamily: oneRow ? fonts.regular : fonts.light,              }}>{'הוצאה'}</Text>            </TouchableOpacity>            <TouchableOpacity              style={{                alignItems: 'center',                alignContent: 'center',                justifyContent: 'center',                alignSelf: 'center',                flexDirection: 'column',              }}              onPress={openCameraAndCameraRoll(item, false)}>              <View style={{                width: oneRow ? 60 : 36,                height: oneRow ? 60 : 36,                alignItems: 'center',                alignContent: 'center',                justifyContent: 'center',                alignSelf: 'center',                flexDirection: 'column',                borderRadius: oneRow ? 30 : 18,                backgroundColor: '#229f88',              }}>                <CustomIcon                  style={{                    marginRight: oneRow ? -8 : -5,                  }}                  name={'income-press'}                  size={oneRow ? 34 : 22}                  color={'#ffffff'} />              </View>              <Text style={{                fontSize: sp(oneRow ? 18 : 15),                color: '#022258',                fontFamily: oneRow ? fonts.regular : fonts.light,              }}>{'הכנסה'}</Text>            </TouchableOpacity>            <TouchableOpacity              style={{                alignItems: 'center',                alignContent: 'center',                justifyContent: 'center',                alignSelf: 'center',                flexDirection: 'column',              }}              onPress={getFolders(item)}>              <View style={{                width: oneRow ? 60 : 36,                height: oneRow ? 60 : 36,                alignItems: 'center',                alignContent: 'center',                justifyContent: 'center',                alignSelf: 'center',                flexDirection: 'column',                borderRadius: oneRow ? 30 : 18,                backgroundColor: '#818080',              }}>                <CustomIcon                  name={'other-press'}                  size={oneRow ? 34 : 22}                  color={'#ffffff'} />              </View>              <Text style={{                fontSize: sp(oneRow ? 18 : 15),                color: '#022258',                fontFamily: oneRow ? fonts.regular : fonts.light,              }}>{'אחר'}</Text>            </TouchableOpacity>          </View>          {!oneRow && (            <View style={{              flex: 26.5,            }} />          )}        </View>      </View>    )  }  render () {    const {      item,      onItemToggle,      updateFavorite,      oneRow,    } = this.props    const { height } = this.state    return (      <Fragment>        {oneRow && (this.renderScrollItem)}        {!oneRow && (          <Fragment>            <Animated.View style={[styles.container, { height }]}>              <TouchableOpacity                style={{                  height: 52.5,                  flexDirection: 'row-reverse',                  alignItems: 'center',                  alignContent: 'center',                  justifyContent: 'flex-end',                }}                onLayout={this.setMinHeight}                onPress={onItemToggle}>                <TouchableOpacity                  style={{                    flexDirection: 'row-reverse',                    flex: 26.5,                    alignItems: 'center',                    alignContent: 'center',                    justifyContent: 'flex-start',                  }}                  onPress={updateFavorite(item)}>                  {item.favorite                    ? <Image                      style={[{                        alignSelf: 'center',                        resizeMode: 'contain',                        width: 46 / 2,                        height: 41 / 2,                      }]}                      source={require('BiziboxUI/assets/starActive.png')}                    />                    : <Image                      style={[{                        alignSelf: 'center',                        resizeMode: 'contain',                        width: 46 / 2,                        height: 41 / 2,                      }]}                      source={require('BiziboxUI/assets/starBase.png')}                    />                  }                </TouchableOpacity>                <View style={{                  flex: 319.5,                  height: 50,                  flexDirection: 'row-reverse',                  alignItems: 'center',                  alignContent: 'center',                  justifyContent: 'space-between',                }}>                  <Text style={{                    paddingRight: 6,                    fontSize: sp(18),                    color: '#022258',                    fontFamily: fonts.regular,                  }}>                    {item.companyName}                  </Text>                  <Text style={{                    paddingLeft: 6,                    fontSize: sp(18),                    color: '#022258',                    fontFamily: fonts.regular,                  }}>                    {item.companyHp}                  </Text>                </View>              </TouchableOpacity>              <View onLayout={this.setMaxHeightAll}>                {this.renderScrollItem}              </View>            </Animated.View>            <View style={{              flexDirection: 'row-reverse',              alignItems: 'flex-end',              justifyContent: 'flex-end',              flex: 1,              height: 1,            }}>              <View style={{                flex: 26.5,              }} />              <View style={{                height: 1,                backgroundColor: '#cdcdcd',                flex: 319.5,                flexDirection: 'row',                alignItems: 'flex-end',                justifyContent: 'flex-end',              }} />            </View>          </Fragment>        )}      </Fragment>    )  }}
